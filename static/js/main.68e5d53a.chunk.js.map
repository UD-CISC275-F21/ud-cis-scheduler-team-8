{"version":3,"sources":["Component/Table.tsx","Component/EDitableCourseItem.tsx","Component/CoursePool.tsx","Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tab","setCourse","schedule","setSchedule","Col","className","Table","Button","onClick","Name","variant","COURSES","EditableCourseItem","course","pool","setPool","useState","editing","setEditing","Description","newDescription","setNewDescription","Form","Group","controlId","Label","Control","as","rows","value","onChange","ev","target","map","oldCourse","ID","filter","ButtonGroup","ToggleButton","checked","id","type","event","currentTarget","CoursePool","show","setShow","handleClose","handleShow","courseItems","toUpperCase","Modal","onHide","Header","closeButton","Title","Body","App","ActiveCourse","SetActiveCourse","Container","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAkHeA,MA1GR,YAC2G,IAD7FC,EAC4F,EAD5FA,UAAUC,EACkF,EADlFA,SAASC,EACyE,EADzEA,YAEpC,OAAO,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACH,8CACA,eAACC,EAAA,EAAD,CAAOD,UAAU,WAAjB,UACI,gCACI,+BACI,0CACA,wCAER,kCACI,+BACI,uCAAS,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAML,EAAY,KAAnC,sBACT,yCAAW,cAACI,EAAA,EAAD,0BACf,+BACI,+BAAKL,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,CAAuBH,QAAS,kBAAML,EAAY,YACrJ,+BAAKD,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAEvG,+BACI,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACnG,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAEvG,+BACI,+BAAKT,EAAS,IAAIO,KAAK,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACnG,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,kBAI/G,eAACL,EAAA,EAAD,CAAOD,UAAU,YAAjB,UACI,gCACI,+BACI,2CACA,wCAER,kCACI,+BACI,sCACA,2CACJ,+BACI,+BAAKH,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACnG,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAEvG,+BACI,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACnG,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAEvG,+BACI,mCAAK,cAACJ,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACjF,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,kBAI/G,eAACL,EAAA,EAAD,CAAOD,UAAU,SAAjB,UACI,gCACI,+BACI,wCACA,wCAER,kCACI,+BACI,sCACA,2CACJ,+BACI,+BAAKH,EAAS,IAAIO,KAAlB,IAAwB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACpG,+BAAKT,EAAS,IAAIO,KAAlB,IAAwB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAExG,+BACI,+BAAKT,EAAS,IAAIO,KAAlB,IAAwB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACpG,mCAAK,cAACJ,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAErF,+BACI,mCAAK,cAACJ,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACjF,mCAAK,cAACJ,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,kBAI7F,eAACL,EAAA,EAAD,CAAOD,UAAU,SAAjB,UACI,gCACI,+BACI,wCACA,wCAER,kCACI,+BACI,sCACA,2CACJ,+BACI,+BAAKH,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACnG,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAEvG,+BACI,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACnG,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,YAEvG,+BACI,+BAAKT,EAAS,IAAIO,KAAlB,IAAwB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,SACpG,+BAAKT,EAAS,GAAGO,KAAjB,IAAuB,cAACF,EAAA,EAAD,CAAQG,QAAQ,cAAcF,QAAS,kBAAIP,EAAUU,EAAQ,KAA7D,SAA4E,cAAC,IAAD,sB,+CCpGhH,SAASC,EAAT,GAC6E,IAD/CC,EAC8C,EAD9CA,OAAQC,EACsC,EADtCA,KAAMC,EACgC,EADhCA,QAE/C,EAA8BC,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,mBAAiBH,EAAOM,aAApE,mBAAOC,EAAP,KAAuBC,EAAvB,KA4BA,OAAOJ,EACH,gCAEI,cAACK,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYlB,UAAU,OAAOmB,UAAU,6BAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,iCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAC9BC,MAAOT,EAEPU,SAAU,SAACC,GAAD,OAAgDV,EAAkBU,EAAGC,OAAOH,eAKlG,cAACtB,EAAA,EAAD,CAAQG,QAAS,UAAUF,QAAW,WAnC1CO,EAAQD,EAAKmB,KAAI,SAACC,GACd,OAAOrB,EAAOsB,KAAOD,EAAUC,GAAxB,2BACCD,GADD,IACYf,YAAaC,IAE5Bc,MAiCAhB,GAAW,IAFf,kBAKA,cAACX,EAAA,EAAD,CAAQG,QAAS,UAAUF,QAAW,WA/B1Ca,EAAkBR,EAAOM,aAiCjBD,GAAW,IAFf,oBAKA,cAACX,EAAA,EAAD,CAAQG,QAAS,SAASF,QAAW,WA7BzCO,EAAQD,EAAKsB,QAAO,SAACF,GACjB,OAAOrB,EAAOsB,KAAOD,EAAUC,QA4B/B,uBAKJ,oCAGI,cAACE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAc5B,QAAS,UAAU6B,QAAWtB,EAASY,MAAQ,IACzDW,GAAE,yBAAoB3B,EAAOsB,IAC7BM,KAAO,WACPX,SAAY,SAACY,GAAD,OAAWxB,EAAWwB,EAAMC,cAAcJ,UAH1D,uBC4FDK,MApJR,YACmE,IAD7C9B,EAC4C,EAD5CA,KAAMC,EACsC,EADtCA,QAE/B,EAAwBC,oBAAS,GAAjC,mBAAO6B,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAC5BE,EAAa,kBAAMF,GAAQ,IAK3BG,EAAcnC,EAAKmB,KAAI,SAAUpB,GACnC,OAAO,gCACH,gCAAK,cAACN,EAAA,EAAD,CAAQG,QAAQ,aAAaF,QAASwC,EAAtC,SAAkD,cAAC,IAAD,MAClDnC,EAAOJ,KAAKyC,cACb,cAAC3C,EAAA,EAAD,CAAQG,QAAQ,aAAaF,QAASwC,EAAtC,SAAkD,cAAC,IAAD,MAAsB,cAACpC,EAAD,CAAoBC,OAAUA,EAAQE,QAAWA,EAASD,KAAQA,OAG9I,eAACqC,EAAA,EAAD,CAAON,KAAMA,EAAMO,OAAQL,EAA3B,UACI,cAACI,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,UACI,0CAAa1C,EAAOsB,GAApB,KAA0BtB,EAAOJ,YAGzC,cAAC0C,EAAA,EAAMK,KAAP,UACK3C,EAAOM,mBAbHN,EAAOsB,OAyB5B,OAAO,eAAC/B,EAAA,EAAD,CAAKC,UAAU,OAAf,UACH,6CACC4C,MCvCMI,MAPf,WACI,OACI,qBAAKhD,UAAY,OAAjB,kC,gBC+BOoD,MAzBf,WAEI,MAAsBzC,mBAAoBL,GAA1C,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA+BC,mBAAoBL,GAAnD,mBAAOT,EAAP,KAAgBC,EAAhB,KACA,EAAwCa,mBAAiBL,EAAQ,IAAjE,mBAAO+C,EAAP,KAAqBC,EAArB,KAEA,OACI,eAACC,EAAA,EAAD,CAAWvD,UAAU,MAArB,UACI,cAACwD,EAAA,EAAD,UACI,cAAC,EAAD,MAEJ,eAACA,EAAA,EAAD,WACI,cAAC,EAAD,CACI3D,SAAUA,EACVC,YAAaA,EACbF,UAAW0D,EACX9C,OAAQ6C,IACZ,cAAC,EAAD,CAAY5C,KAAMA,EAAMC,QAASA,WCdlC+C,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UAGI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,K","file":"static/js/main.68e5d53a.chunk.js","sourcesContent":["import Table from \"react-bootstrap/Table\";\nimport React from \"react\";\nimport { IoRemoveCircleOutline } from \"react-icons/io5\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Button, Col} from \"react-bootstrap\";\nimport {Course} from \"../interfaces/courses\";\nimport COURSES from \"../assets/courses.json\";\n\nexport function Tab({setCourse,schedule,setSchedule}:\n    {setCourse:(c:Course)=>void, schedule:Course[], setSchedule:(s:Course[])=>void, course:Course}): JSX.Element {\n    return <Col className=\"planner\">\n        <h2>CISC PLANNER</h2>\n        <Table className=\"freshman\">\n            <thead>\n                <tr>\n                    <th>FRESHMAN</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall <Button onClick={() => setSchedule([])}>Clear</Button></td>\n                    <td>Spring <Button>Clear</Button></td></tr>\n                <tr>\n                    <td>{schedule[0].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline onClick={() => setSchedule([])}/></Button></td> \n                    <td>{schedule[1].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[6].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[7].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[13].Name}<Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td>{schedule[2].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n        <Table className=\"sophomore\">\n            <thead>\n                <tr>\n                    <th>SOPHOMORE</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall</td>\n                    <td>Spring</td></tr>\n                <tr>\n                    <td>{schedule[3].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[5].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[4].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[8].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td>{schedule[9].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n        <Table className=\"junior\">\n            <thead>\n                <tr>\n                    <th>JUNIOR</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall</td>\n                    <td>Spring</td></tr>\n                <tr>\n                    <td>{schedule[10].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[11].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[12].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n        <Table className=\"senior\">\n            <thead>\n                <tr>\n                    <th>SENIOR</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall</td>\n                    <td>Spring</td></tr>\n                <tr>\n                    <td>{schedule[0].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[1].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[6].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[7].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[13].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td>{schedule[2].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n    </Col>;\n\n\n} \n\n\nexport default Tab;\n\n","import React, {useState} from \"react\";\nimport { Course } from \"../interfaces/courses\";\nimport { ToggleButton, ButtonGroup, Form, Button } from \"react-bootstrap\";\n\nexport function EditableCourseItem ({course, pool, setPool}: \n    {course: Course, pool: Course[], setPool: (pool: Course[])=>void}):JSX.Element {\n    const [editing, setEditing] = useState<boolean>(false);\n    const [newDescription, setNewDescription] = useState<string>(course.Description);\n    // onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setQuestion(ev.target.value)}\n    // onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setAnswer(ev.target.value)}\n\n    //change the descriprion function\n     \n    function updatePool (): void {\n        setPool(pool.map((oldCourse: Course): Course => {\n            return course.ID === oldCourse.ID ?\n                {...oldCourse, Description: newDescription \n                /** you can add more here ie.(ID: newID) if you make new const before */}:\n                oldCourse;\n        }));\n    }\n\n    function resetEditableReigon(): void{\n        setNewDescription(course.Description);\n        /** similarly, you can add more pool elements here if you put more\n         * const before, (ie. setNewID(course.ID);)\n        */\n    }\n\n    function deleteButton(): void{\n        setPool(pool.filter((oldCourse: Course): boolean => {\n            return course.ID !== oldCourse.ID;\n        }));\n    }\n\n    return editing ?\n        <div>\n            \n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"addCardForm.answerTextArea\">\n                    <Form.Label>Course Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        value={newDescription}\n                        // onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setDescription(ev.target.value)}\n                        onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setNewDescription(ev.target.value)}/>\n                </Form.Group>\n            </Form>\n\n\n            <Button variant= \"success\" onClick = {()=>{\n                updatePool();\n                setEditing(false);\n            }}>Save</Button>\n            \n            <Button variant= \"warning\" onClick = {()=>{\n                resetEditableReigon();\n                setEditing(false);\n            }}>Cancle</Button>\n\n            <Button variant= \"danger\" onClick = {()=>{\n                deleteButton();\n            }}>Delete</Button>\n\n        </div> :\n        <div>\n            {/*course.ID*/} {/*course.Name*/}\n\n            <ButtonGroup>\n                <ToggleButton variant= \"primary\" checked = {editing} value = \"1\"\n                    id={`toggle-editing-${course.ID}`}\n                    type = \"checkbox\"\n                    onChange = {(event) => setEditing(event.currentTarget.checked)}>\n                    Edit\n                </ToggleButton>\n            </ButtonGroup>\n        </div>;\n}","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport { Course } from \"../interfaces/courses\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//import { propTypes } from \"react-bootstrap/esm/Image\";\n\nimport { Button, Col, Modal } from \"react-bootstrap\";\nimport { IoIosMore, IoIosAddCircleOutline } from \"react-icons/io\";\nimport { EditableCourseItem } from \"./EDitableCourseItem\";\n\n\nexport function CoursePool({ pool, setPool }: \n    { pool: Course[] , setPool: (newpool: Course[])=>void}): JSX.Element {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    //const [ActiveCourse, SetActiveCourse] = useState();\n\n\n    const courseItems = pool.map(function (course: Course): JSX.Element {\n        return <div key={course.ID}>\n            <div><Button variant=\"tansparant\" onClick={handleShow}><IoIosAddCircleOutline /></Button>\n                {course.Name.toUpperCase()}\n                <Button variant=\"tansparant\" onClick={handleShow}><IoIosMore /></Button><EditableCourseItem course = {course} setPool = {setPool} pool = {pool}/>\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <strong>CISC{course.ID}: {course.Name}</strong>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {course.Description}\n                </Modal.Body>\n            </Modal>\n\n\n        </div>;\n\n    });\n\n\n\n\n    return <Col className=\"pool\">\n        <h2>Course Pool</h2>\n        {courseItems}\n\n\n\n    </Col>;\n}\n\n\n/*\n\n <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <strong>CISC{pool[0].ID}: {pool[0].Name}</strong>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {pool[0].Description}\n            </Modal.Body>\n        </Modal>\n\n\n\nfunction Course_pull(): JSX.Element {\n    return (\n\n        <div>\n\n\n            <table className=\"course_Pool\">\n                \n                <thead>\n                    <tr>\n                        <th scope=\"col\"># course ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Prerequisite</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">CISC108</th>\n                        <td>Introduction to Computer Science I</td>\n                        <td>Required</td>\n                        <td>N/A</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">CISC181</th>\n                        <td>Introduction to Computer Science II</td>\n                        <td>Required</td>\n                        <td>CISC108 OR CISC106</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">CISC210</th>\n                        <td>Introduction to Systems Programming</td>\n                        <td>Required</td>\n                        <td>CISC108 OR CISC106</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nfunction Course_pull(): JSX.Element {\n    \n    const List_of_Classes: (string | number)[][] = [];\n    List_of_Classes[0] = [108, \" Introduction to computer Science 1\"];\n    List_of_Classes[1] = [181, \" Introduction to computer Science 2\"];\n    List_of_Classes[2] = [210, \" Introduction to computer Programming\"];\n    List_of_Classes[3] = [220, \" Data Structures\"];\n    List_of_Classes[4] = [241, \" Calculus 1\"];\n    List_of_Classes[5] = [275, \" Introduction to Software Engineering\"];\n    List_of_Classes[6] = [355, \" Computers, Ethics and Society\"];\n    List_of_Classes[7] = [110, \" Seminar in Composition\"];\n    List_of_Classes[8] = [242, \" Calculus 2\"];\n    const list: JSX.Element[] = [];\n\n\n\n\n\n    for (let i = 0; i < 9; i++) {\n        const box =\n            <div key={i} className=\"item\" onClick={() => Fire_item(i)}>\n                <li >Course ID:_ </li>\n                <div>{List_of_Classes[i][0]}</div>\n                {/*List_of_Classes[i]}\n                <li>Title_</li>\n                <div> {List_of_Classes[i][1]}</div>\n            </div>;\n        list[i] = box;\n    }\n\n\n    function Fire_item(id: number) {\n        props.clickHandler(id);\n\n\n\n\n    }\n\n\n    return <div className=\"course_Pool\"> {list}</div>;\n}\n*/\n\n\n\nexport default CoursePool;\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction Header(): JSX.Element {\n    return (\n        <div className = \"Head\"> UD CISC Scheduler </div>\n        \n    );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tab from \"./Component/Table\";\nimport CoursePool from \"./Component/CoursePool\";\nimport Header from \"./Header\";\nimport COURSES from \"./assets/courses.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Container, Row } from \"react-bootstrap\";\nimport { Course } from \"./interfaces/courses\";\n\nfunction App(): JSX.Element {\n\n    const [pool, setPool]=useState <Course[]>(COURSES); \n    const [schedule,setSchedule] = useState <Course[]>(COURSES);\n    const [ActiveCourse, SetActiveCourse] = useState<Course>(COURSES[0]);\n\n    return (\n        <Container className=\"App\">\n            <Row>\n                <Header />\n            </Row>\n            <Row>\n                <Tab\n                    schedule={schedule}\n                    setSchedule={setSchedule}\n                    setCourse={SetActiveCourse}\n                    course={ActiveCourse}></Tab>\n                <CoursePool pool={pool} setPool={setPool}></CoursePool>\n            </Row>\n\n        </Container>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        \n        \n        <App /> \n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}