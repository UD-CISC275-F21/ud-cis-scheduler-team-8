{"version":3,"sources":["Component/Table.tsx","Component/EDitableCourseItem.tsx","Component/CoursePool.tsx","Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tab","semesters","semesterItems","setSemesters","map","semester","courseid","courses","ID","coursename","Name","i","console","log","Table","className","toUpperCase","onClick","Col","Button","EditableCourseItem","course","pool","setPool","useState","editing","setEditing","Description","newDescription","setNewDescription","Form","Group","controlId","Label","Control","as","rows","value","onChange","ev","target","variant","oldCourse","filter","ButtonGroup","ToggleButton","checked","id","type","event","currentTarget","CoursePool","show","setShow","handleClose","handleShow","courseItems","Modal","onHide","Header","closeButton","Title","Body","App","COURSES","Container","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a544ae3.chunk.js","sourcesContent":["import Table from \"react-bootstrap/Table\";\nimport React from \"react\";\nimport { IoRemoveCircleOutline } from \"react-icons/io5\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Button, Col} from \"react-bootstrap\";\nimport {/**Course,*/ Semester} from \"../interfaces/courses\";\n//import COURSES from \"../assets/courses.json\";\n\nexport function Tab({/**setCourse,course,schedule,setSchedule,*/semesters, setSemesters}:\n    {/**setCourse:(c:Course)=>void, schedule:Course[], setSchedule:(s:Course[])=>void, course:Course,*/\n    semesters:Semester[],setSemesters:(se:Semester[])=>void }): JSX.Element {\n\n\n\n    const semesterItems = semesters.map(function (semester: Semester): JSX.Element {\n        let courseid= semester.courses[0].ID;\n        let coursename= semester.courses[0].Name;\n        for (let i = 0; i < 14; i++) {\n            courseid = semester.courses[i].ID;\n            console.log(courseid);\n            coursename= semester.courses[i].Name;\n            console.log(coursename);\n        }\n        return <div key={courseid}>\n            <div>\n                <Table className=\"freshman\">\n                    <tr>\n                        <td>{coursename.toUpperCase()}\n                            <IoRemoveCircleOutline onClick = {()=>{\n                                () => setSemesters([]);\n                            }}/></td>\n                        <td>{coursename.toUpperCase()}\n                            <IoRemoveCircleOutline onClick = {()=>{\n                                //deleteButton();\n                            }}/></td>\n                    </tr>\n                </Table>\n            </div>\n        </div>;\n    });\n\n    /**function deleteButton(): void{\n        setSemesters(semesters.filter((oldSemester: Semester): boolean => {\n            return semesters.courses !== oldSemester.courses;\n        }));\n    }*/\n\n    return <Col className=\"pool\">\n        <h2>Schedule</h2>\n        <thead>\n            <tr>\n                <th>FRESHMAN</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>Fall<Button>Clear</Button></td>\n                <td>Spring <Button>Clear</Button></td>\n            </tr>\n            {semesterItems}\n        </tbody>\n    </Col>;\n\n\n    \n    /**return <Col className=\"planner\">\n        <h2>CISC PLANNER</h2>\n        <Table className=\"freshman\">\n            <thead>\n                <tr>\n                    <th>FRESHMAN</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall <Button onClick={() => setSchedule([])}>Clear</Button></td>\n                    <td>Spring <Button>Clear</Button></td></tr>\n                <tr>\n                    <td>{schedule[0].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline onClick={() => setSchedule([])}/></Button></td> \n                    <td>{schedule[1].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[6].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[7].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[13].Name}<Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td>{schedule[2].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n        <Table className=\"sophomore\">\n            <thead>\n                <tr>\n                    <th>SOPHOMORE</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall</td>\n                    <td>Spring</td></tr>\n                <tr>\n                    <td>{schedule[3].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[5].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[4].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[8].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td>{schedule[9].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n        <Table className=\"junior\">\n            <thead>\n                <tr>\n                    <th>JUNIOR</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall</td>\n                    <td>Spring</td></tr>\n                <tr>\n                    <td>{schedule[10].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[11].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[12].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td> <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n        <Table className=\"senior\">\n            <thead>\n                <tr>\n                    <th>SENIOR</th>\n                    <th> </th></tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Fall</td>\n                    <td>Spring</td></tr>\n                <tr>\n                    <td>{schedule[0].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[1].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[6].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                    <td>{schedule[7].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td> \n                </tr>\n                <tr>\n                    <td>{schedule[13].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                    <td>{schedule[2].Name} <Button variant=\"transparent\" onClick={()=>setCourse(COURSES[1] as Course)}><IoRemoveCircleOutline /></Button></td>\n                </tr>\n            </tbody>\n        </Table>\n    </Col>;\n    */\n\n\n} \n\n\nexport default Tab;","import React, {useState} from \"react\";\nimport { Course } from \"../interfaces/courses\";\nimport { ToggleButton, ButtonGroup, Form, Button } from \"react-bootstrap\";\n\nexport function EditableCourseItem ({course, pool, setPool}: \n    {course: Course, pool: Course[], setPool: (pool: Course[])=>void}):JSX.Element {\n    const [editing, setEditing] = useState<boolean>(false);\n    const [newDescription, setNewDescription] = useState<string>(course.Description);\n    // onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setQuestion(ev.target.value)}\n    // onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setAnswer(ev.target.value)}\n\n    //change the descriprion function\n     \n    function updatePool (): void {\n        setPool(pool.map((oldCourse: Course): Course => {\n            return course.ID === oldCourse.ID ?\n                {...oldCourse, Description: newDescription \n                /** you can add more here ie.(ID: newID) if you make new const before */}:\n                oldCourse;\n        }));\n    }\n\n    function resetEditableReigon(): void{\n        setNewDescription(course.Description);\n        /** similarly, you can add more pool elements here if you put more\n         * const before, (ie. setNewID(course.ID);)\n        */\n    }\n\n    function deleteButton(): void{\n        setPool(pool.filter((oldCourse: Course): boolean => {\n            return course.ID !== oldCourse.ID;\n        }));\n    }\n\n    return editing ?\n        <div>\n            \n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"addCardForm.answerTextArea\">\n                    <Form.Label>Course Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} \n                        value={newDescription}\n                        // onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setDescription(ev.target.value)}\n                        onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setNewDescription(ev.target.value)}/>\n                </Form.Group>\n            </Form>\n\n\n            <Button variant= \"success\" onClick = {()=>{\n                updatePool();\n                setEditing(false);\n            }}>Save</Button>\n            \n            <Button variant= \"warning\" onClick = {()=>{\n                resetEditableReigon();\n                setEditing(false);\n            }}>Cancle</Button>\n\n            <Button variant= \"danger\" onClick = {()=>{\n                deleteButton();\n            }}>Delete</Button>\n\n        </div> :\n        <div>\n            {/*course.ID*/} {/*course.Name*/}\n\n            <ButtonGroup>\n                <ToggleButton variant= \"primary\" checked = {editing} value = \"1\"\n                    id={`toggle-editing-${course.ID}`}\n                    type = \"checkbox\"\n                    onChange = {(event) => setEditing(event.currentTarget.checked)}>\n                    Edit\n                </ToggleButton>\n            </ButtonGroup>\n        </div>;\n}","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport { Course } from \"../interfaces/courses\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//import { propTypes } from \"react-bootstrap/esm/Image\";\n\nimport { Button, Col, Modal } from \"react-bootstrap\";\nimport { IoIosMore, IoIosAddCircleOutline } from \"react-icons/io\";\nimport { EditableCourseItem } from \"./EDitableCourseItem\";\n\n\nexport function CoursePool({ pool, setPool }: \n    { pool: Course[] , setPool: (newpool: Course[])=>void}): JSX.Element {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    //const [ActiveCourse, SetActiveCourse] = useState();\n\n\n    const courseItems = pool.map(function (course: Course): JSX.Element {\n        return <div key={course.ID}>\n            <div><Button variant=\"tansparant\" onClick={handleShow}><IoIosAddCircleOutline /></Button>\n                {course.Name.toUpperCase()}\n                <Button variant=\"tansparant\" onClick={handleShow}><IoIosMore /></Button><EditableCourseItem course = {course} setPool = {setPool} pool = {pool}/>\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <strong>CISC{course.ID}: {course.Name}</strong>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {course.Description}\n                </Modal.Body>\n            </Modal>\n\n\n        </div>;\n\n    });\n\n\n\n\n    return <Col className=\"pool\">\n        <h2>Course Pool</h2>\n        {courseItems}\n\n\n\n    </Col>;\n}\n\n\n/*\n\n <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <strong>CISC{pool[0].ID}: {pool[0].Name}</strong>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {pool[0].Description}\n            </Modal.Body>\n        </Modal>\n\n\n\nfunction Course_pull(): JSX.Element {\n    return (\n\n        <div>\n\n\n            <table className=\"course_Pool\">\n                \n                <thead>\n                    <tr>\n                        <th scope=\"col\"># course ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Prerequisite</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">CISC108</th>\n                        <td>Introduction to Computer Science I</td>\n                        <td>Required</td>\n                        <td>N/A</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">CISC181</th>\n                        <td>Introduction to Computer Science II</td>\n                        <td>Required</td>\n                        <td>CISC108 OR CISC106</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">CISC210</th>\n                        <td>Introduction to Systems Programming</td>\n                        <td>Required</td>\n                        <td>CISC108 OR CISC106</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nfunction Course_pull(): JSX.Element {\n    \n    const List_of_Classes: (string | number)[][] = [];\n    List_of_Classes[0] = [108, \" Introduction to computer Science 1\"];\n    List_of_Classes[1] = [181, \" Introduction to computer Science 2\"];\n    List_of_Classes[2] = [210, \" Introduction to computer Programming\"];\n    List_of_Classes[3] = [220, \" Data Structures\"];\n    List_of_Classes[4] = [241, \" Calculus 1\"];\n    List_of_Classes[5] = [275, \" Introduction to Software Engineering\"];\n    List_of_Classes[6] = [355, \" Computers, Ethics and Society\"];\n    List_of_Classes[7] = [110, \" Seminar in Composition\"];\n    List_of_Classes[8] = [242, \" Calculus 2\"];\n    const list: JSX.Element[] = [];\n\n\n\n\n\n    for (let i = 0; i < 9; i++) {\n        const box =\n            <div key={i} className=\"item\" onClick={() => Fire_item(i)}>\n                <li >Course ID:_ </li>\n                <div>{List_of_Classes[i][0]}</div>\n                {/*List_of_Classes[i]}\n                <li>Title_</li>\n                <div> {List_of_Classes[i][1]}</div>\n            </div>;\n        list[i] = box;\n    }\n\n\n    function Fire_item(id: number) {\n        props.clickHandler(id);\n\n\n\n\n    }\n\n\n    return <div className=\"course_Pool\"> {list}</div>;\n}\n*/\n\n\n\nexport default CoursePool;\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction Header(): JSX.Element {\n    return (\n        <div className = \"Head\"> UD CISC Scheduler </div>\n        \n    );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Tab from \"./Component/Table\";\nimport CoursePool from \"./Component/CoursePool\";\nimport Header from \"./Header\";\nimport COURSES from \"./assets/courses.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { Course, Semester } from \"./interfaces/courses\";\n\nfunction App(): JSX.Element {\n\n    const [pool, setPool]=useState <Course[]>(COURSES); \n    //const [schedule,setSchedule] = useState <Course[]>(COURSES);\n    //const [ActiveCourse, SetActiveCourse] = useState<Course>(COURSES[0]);\n    const [semesters, setSemesters] = useState<Semester[]>([]);\n\n    return (\n        <Container className=\"App\">\n            <Row>\n                <Header />\n            </Row>\n            <Row>\n                <Tab\n                    /**schedule={schedule}\n                    setSchedule={setSchedule}\n                    setCourse={SetActiveCourse}\n                    course={ActiveCourse}*/\n                    semesters={semesters}\n                    setSemesters={setSemesters}></Tab>\n                <CoursePool pool={pool} setPool={setPool}></CoursePool>\n            </Row>\n\n        </Container>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        \n        \n        <App /> \n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}